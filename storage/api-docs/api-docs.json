{
    "openapi": "3.0.0",
    "info": {
        "title": "Prasso Invenbin API",
        "description": "API endpoints for Prasso Invenbin",
        "contact": {
            "email": "bcp@faxt.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/bom": {
            "get": {
                "tags": [
                    "BillOfMaterials"
                ],
                "summary": "Get all bills of material",
                "description": "Retrieve a list of bills of material records with eager loading of products relationship",
                "operationId": "721adbc861c1e627873d4cb3dd54ff08",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "guid": {
                                                "type": "string",
                                                "example": "abc123"
                                            },
                                            "bom_name": {
                                                "type": "string",
                                                "example": "cup with logo"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "BillOfMaterials"
                ],
                "summary": "Create a new bill of material",
                "description": "Create a new bill of material",
                "operationId": "a6b4b142393512a782344980efed7c8b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillOfMaterialsInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillOfMaterialsInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/bom/{guid}": {
            "get": {
                "tags": [
                    "BillOfMaterials"
                ],
                "summary": "Get a specific bill of material",
                "description": "Display the specified resource.",
                "operationId": "be7c625e75526ffe7273fbac06b4fcc2",
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "GUID of the bill of material",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillOfMaterialsInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "BillOfMaterials"
                ],
                "summary": "Update a bill of material",
                "description": "Update a bill of material",
                "operationId": "0d9da55c07d72c905009c2dad61b987b",
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "GUID of the bill of material",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillOfMaterialsInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillOfMaterialsInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BillOfMaterials"
                ],
                "summary": "Delete a bill of material",
                "description": "Remove the specified resource from storage.",
                "operationId": "79cedd158f82fec343d9acada90da754",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the bill of material",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "BillOfMaterials deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Retrieve a list of categories records with eager loading of products relationship",
                "operationId": "ac9c4d978ea4e5b72915ca9728e5b8b1",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "2"
                                            },
                                            "category_name": {
                                                "type": "string",
                                                "example": "Cat A"
                                            },
                                            "parent": {
                                                "type": "string",
                                                "example": "1"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category",
                "operationId": "cca49a87d9b0ebb9a98ad7c154b71737",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category",
                "description": "Display the specified resource.",
                "operationId": "09767bb2e47dde77dd1e2591428b0ae1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Update a category",
                "operationId": "7dcf71887e585de7f881e9eb98d86126",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Remove the specified resource from storage.",
                "operationId": "9b61b65823f4a21f182506b34ddf805c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory levels for all products",
                "description": "Returns a list of all products along with their inventory levels.",
                "operationId": "getInventory",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer"
                                            },
                                            "product_name": {
                                                "description": "Product name",
                                                "type": "string"
                                            },
                                            "inventory_count": {
                                                "description": "Inventory count",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/inventory/{id}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Display the inventory level for a specific product.",
                "description": "Returns the inventory level for a product identified by its ID.",
                "operationId": "cb12f630662944c0f607dbc8f9fd14be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer"
                                            },
                                            "product_name": {
                                                "description": "Product Name",
                                                "type": "string"
                                            },
                                            "inventory_count": {
                                                "description": "Inventory Count",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Update the inventory level for a specific product.",
                "description": "Adjusts the inventory level based on the incoming adjustment value and returns the updated product details.",
                "operationId": "91636f94041ace1aa99fb79808bd2558",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Adjustment value for the inventory count",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "adjustment"
                                ],
                                "properties": {
                                    "adjustment": {
                                        "description": "The adjustment amount to update the inventory level",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Product ID",
                                            "type": "integer"
                                        },
                                        "product_name": {
                                            "description": "Product Name",
                                            "type": "string"
                                        },
                                        "inventory_count": {
                                            "description": "Updated Inventory Count",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/products/{id}/reorder-point": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Set reorder point for a product",
                "description": "Set the reorder point for a specific product and trigger notifications if necessary.",
                "operationId": "setReorderPoint",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Reorder point data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reorder_point"
                                ],
                                "properties": {
                                    "reorder_point": {
                                        "type": "number",
                                        "example": "10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reorder point updated successfully."
                                        },
                                        "product": {
                                            "$ref": "#/components/schemas/ProductInputOutput"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "description": "Retrieve a list of product records with eager loading of products relationship",
                "operationId": "d97d1c3727cbac49708b85f7d11f7d58",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "guid": {
                                                "type": "string",
                                                "example": "11111-11111-11111-11111"
                                            },
                                            "product_name": {
                                                "type": "string",
                                                "example": "Product A"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "example": "01/01/2024"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Create a new product",
                "operationId": "785644b7d7dd38af4b51dafd0fbc1b6d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/products/{guid}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product",
                "description": "Display the specified resource.",
                "operationId": "262249526f8ff03b45e7a29f8f799fc3",
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "GUID of the product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Update a product",
                "operationId": "2428b47a90014f1b9c12826661106aae",
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "GUID of the product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "Remove the specified resource from storage.",
                "operationId": "3990b311058e05555d03f3d3ec69f0c9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/product-statuses": {
            "get": {
                "tags": [
                    "ProductStatuses"
                ],
                "summary": "Get all statuses that apply to products",
                "description": "Retrieve a list of product status records",
                "operationId": "72326734939d7cb8eccd410a6aa761ae",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "Active"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProductStatuses"
                ],
                "summary": "Create a new product status",
                "description": "Create a new product status",
                "operationId": "e8f28dd2ec9d358c6d72a604873bfcce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductStatusInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductStatusInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/product-statuses/{id}": {
            "get": {
                "tags": [
                    "ProductStatuses"
                ],
                "summary": "Get a specific product status",
                "description": "Display the specified resource.",
                "operationId": "e363aacb70be75ffcc13efe7703ce54c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the product status",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductStatusInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProductStatuses"
                ],
                "summary": "Update a product status",
                "description": "Update a product status",
                "operationId": "867f97947999cefab9bad7f86397a093",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the product status",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductStatusInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductStatusInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProductStatuses"
                ],
                "summary": "Delete a product status",
                "description": "Remove the specified resource from storage.",
                "operationId": "41af96d01528ddd2a69ef301256abcbd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product status",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ProductStatus deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/product-types": {
            "get": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "Get all product types",
                "description": "Retrieve a list of product types records with eager loading of products relationship",
                "operationId": "ba4af95e0852470ac8a41ef8ce519a3e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "product_type": {
                                                "type": "string",
                                                "example": "Assembly"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "Create a new product type",
                "description": "Create a new product type",
                "operationId": "3c68cfbbbdc9e1ee9dd7f5e76a299cee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/product-types/{id}": {
            "get": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "Get a specific product type",
                "description": "Display the specified resource.",
                "operationId": "35987a3a6d04fb2d2db78ebc01631157",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the product type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "Update a product type",
                "description": "Update a product type",
                "operationId": "4be0ec9486ab186777681dde03690fc4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the product type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeInputOutput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeInputOutput"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "Delete a product type",
                "description": "Remove the specified resource from storage.",
                "operationId": "722052e72b99ac7c9520e8b6c9d70398",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ProductType deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BillOfMaterialsInputOutput": {
                "title": "ErpBom",
                "description": "Erp Bom model",
                "properties": {
                    "id": {
                        "description": "ID of the BOM",
                        "type": "integer"
                    },
                    "erp_product_id": {
                        "description": "Foreign key ID of the associated ERP product",
                        "type": "integer"
                    },
                    "bom_name": {
                        "description": "Name of the BOM",
                        "type": "string"
                    },
                    "updated_by": {
                        "description": "Foreign key ID of the user who last updated the BOM",
                        "type": "integer"
                    },
                    "updated_at": {
                        "description": "Date and time when the BOM was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Date and time when the BOM was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CategoryInputOutput": {
                "title": "Category",
                "description": "Erp Category model",
                "properties": {
                    "id": {
                        "description": "ID of the category",
                        "type": "integer"
                    },
                    "category_name": {
                        "description": "Name of the category",
                        "type": "string"
                    },
                    "image_file": {
                        "description": "Image file of the category",
                        "type": "string"
                    },
                    "parent_id": {
                        "description": "ID of the parent category",
                        "type": "integer"
                    },
                    "short_description": {
                        "description": "Short description of the category",
                        "type": "string"
                    },
                    "long_description": {
                        "description": "Long description of the category",
                        "type": "string"
                    },
                    "bom_id": {
                        "description": "ID of the bill of material associated with the category",
                        "type": "integer"
                    },
                    "updated_by": {
                        "description": "ID of the user who last updated the category",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ErpBomItem": {
                "title": "ErpBomItem",
                "description": "Erp Bom Item model",
                "properties": {
                    "id": {
                        "description": "ID of the BOM item",
                        "type": "integer"
                    },
                    "item_description": {
                        "description": "Description of the BOM item",
                        "type": "string"
                    },
                    "adjustment_units": {
                        "description": "Identifier of the BOM item",
                        "type": "decimal",
                        "nullable": true
                    },
                    "erp_bom_id": {
                        "description": "Foreign key ID of the associated BOM",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Date and time when the BOM item was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Date and time when the BOM item was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductInputOutput": {
                "title": "ErpProduct",
                "description": "Erp Product model",
                "properties": {
                    "sku": {
                        "description": "SKU of the product",
                        "type": "string"
                    },
                    "guid": {
                        "description": "GUID of the product",
                        "type": "string"
                    },
                    "product_name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "Short description of the product",
                        "type": "string"
                    },
                    "attribute_xml": {
                        "description": "XML attributes of the product",
                        "type": "string"
                    },
                    "stock_location": {
                        "description": "Location of the product in stock",
                        "type": "string"
                    },
                    "our_price": {
                        "description": "Price of the product set by us",
                        "type": "number",
                        "format": "decimal"
                    },
                    "retail_price": {
                        "description": "Retail price of the product",
                        "type": "number",
                        "format": "decimal"
                    },
                    "weight": {
                        "description": "Weight of the product",
                        "type": "number",
                        "format": "decimal"
                    },
                    "currency_code": {
                        "description": "Currency code of the product price",
                        "type": "string"
                    },
                    "unit_of_measure_id": {
                        "description": "IDUnit of measure for the product",
                        "type": "string"
                    },
                    "admin_comments": {
                        "description": "Comments from the admin about the product",
                        "type": "string"
                    },
                    "length": {
                        "description": "Length of the product",
                        "type": "number",
                        "format": "decimal"
                    },
                    "height": {
                        "description": "Height of the product",
                        "type": "number",
                        "format": "decimal"
                    },
                    "width": {
                        "description": "Width of the product",
                        "type": "number",
                        "format": "decimal"
                    },
                    "dimension_unit_id": {
                        "description": "ID Unit of measure for dimensions of the product",
                        "type": "string"
                    },
                    "list_order": {
                        "description": "Order of the product in the list",
                        "type": "integer"
                    },
                    "rating_sum": {
                        "description": "Sum of ratings for the product",
                        "type": "integer"
                    },
                    "total_rating_votes": {
                        "description": "Total number of rating votes for the product",
                        "type": "integer"
                    },
                    "default_image": {
                        "description": "URL or path to the default image of the product",
                        "type": "string"
                    },
                    "owned_by": {
                        "description": "ID of the owner of the product",
                        "type": "integer"
                    },
                    "inventory_count": {
                        "description": "Inventory count of the product",
                        "type": "integer"
                    },
                    "reorder_point": {
                        "description": "Reorder point of the product",
                        "type": "integer"
                    },
                    "product_status_id": {
                        "description": "ID of the status of the product",
                        "type": "integer"
                    },
                    "product_type_id": {
                        "description": "ID of the type of the product",
                        "type": "integer"
                    },
                    "updated_by": {
                        "description": "User who last updated the product",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProductStatusInputOutput": {
                "title": "ErpProductStatus",
                "description": "Erp Product Status model",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the product status",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "description": "The status of the product",
                        "type": "string",
                        "example": "Active"
                    },
                    "updated_by": {
                        "description": "The user who last updated the product status",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "created_at": {
                        "description": "The date and time when the product status was created",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "The date and time when the product status was last updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "ProductTypeInputOutput": {
                "title": "ProductType",
                "description": "Erp ProductType model",
                "properties": {
                    "product_type": {
                        "description": "Name of the product type",
                        "type": "string"
                    },
                    "updated_by": {
                        "description": "ID of the user who last updated the product type",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ErpProductUsageLogInputOutput": {
                "title": "ErpProductStatus",
                "description": "Erp Product Status model",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the product status",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "erp_product_id": {
                        "description": "The id of product used",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "adjustment": {
                        "description": "amount inventory count of product was adjusted",
                        "type": "integer"
                    },
                    "adjustment_type": {
                        "description": "the type of adjustment",
                        "type": "string",
                        "example": "Active"
                    },
                    "reason": {
                        "description": "reason for the adjustment",
                        "type": "string",
                        "example": "Active"
                    },
                    "updated_by": {
                        "description": "ID of the user who entered this record",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "The date and time when the product status was created",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "The date and time when the product status was last updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "401": {
                "description": "Unauthorized"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}